/**************************************************************************
 OmegaT - Computer Assisted Translation (CAT) tool 
          with fuzzy matching, translation memory, keyword search, 
          glossaries, and translation leveraging into updated projects.

 Copyright (C) 2000-2006 Keith Godfrey and Maxym Mykhalchuk
               2010 Didier Briel
               2012 Alex Buloichick, Didier Briel
               Home page: http://www.omegat.org/
               Support center: http://groups.yahoo.com/group/OmegaT/

 This file is part of OmegaT.

 OmegaT is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 OmegaT is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 **************************************************************************/

package org.omegat.gui.preferences.view;

import javax.swing.JPanel;

import org.omegat.util.OStrings;

/**
 * 
 * @author Didier Briel
 * @author Alex Buloichik (alex73mail@gmail.com)
 */
@SuppressWarnings("serial")
public class MachineTranslationPanel extends JPanel {

    /** Creates new form WorkflowOptionsDialog */
    public MachineTranslationPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                autoFetchCheckBox = new javax.swing.JCheckBox();
                untranslatedOnlyCheckBox = new javax.swing.JCheckBox();
                filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
                mtPrefsTabbedPane = new javax.swing.JTabbedPane();
                jScrollPane1 = new javax.swing.JScrollPane();
                mtProviderTable = new javax.swing.JTable();

                setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
                setMinimumSize(new java.awt.Dimension(250, 200));
                setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

                org.openide.awt.Mnemonics.setLocalizedText(autoFetchCheckBox, OStrings.getString("MT_AUTO_FETCH")); // NOI18N
                add(autoFetchCheckBox);

                org.openide.awt.Mnemonics.setLocalizedText(untranslatedOnlyCheckBox, OStrings.getString("MT_ONLY_UNTRANSLATED")); // NOI18N
                add(untranslatedOnlyCheckBox);
                add(filler1);

                mtPrefsTabbedPane.setName(""); // NOI18N

                mtProviderTable.setFillsViewportHeight(true);
                jScrollPane1.setViewportView(mtProviderTable);

                mtPrefsTabbedPane.addTab("Generic", jScrollPane1);

                add(mtPrefsTabbedPane);
        }// </editor-fold>//GEN-END:initComponents

        // Variables declaration - do not modify//GEN-BEGIN:variables
        javax.swing.JCheckBox autoFetchCheckBox;
        private javax.swing.Box.Filler filler1;
        private javax.swing.JScrollPane jScrollPane1;
        javax.swing.JTabbedPane mtPrefsTabbedPane;
        javax.swing.JTable mtProviderTable;
        javax.swing.JCheckBox untranslatedOnlyCheckBox;
        // End of variables declaration//GEN-END:variables
}
